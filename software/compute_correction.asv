function [correction_mass, correction_mass_angle] = compute_correction(A, AB, test_mass, test_mass_angle, subtract_mode)

    %convert from polar to cartesian
    A_cart = A(2) .* [cos(A(1)) sin(A(1))];
    AB_cart = AB(2) .* [cos(AB(1)) sin(AB(1))];

    B_cart = [AB_cart(1) - A_cart(1) ; AB_cart(2) - A_cart(2)];
    B_theta = atan2(B_cart(2), B_cart(1));
    B_mag = norm(B_cart);

    B = [B_theta ; B_mag];
    

    relative_angle = (A(1) + pi) - B(1);

    if (subtract_mode)
        correction_mass = -test_mass *  (A(2) / B(2));
        correction_mass_angle = test_mass_angle + relative_angle + pi;
    else
        correction_mass = test_mass *  (A(2) / B(2));
        correction_mass_angle = test_mass_angle + relative_angle;
    end



    figure()
    clf
    
    polarplot([0 A(1)], [0, A(2)], "Linewidth", 2, "Color", "blue")
    hold on
    polarplot([0 AB(1)], [0, AB(2)], "Linewidth", 2, "Color", "red")

    polarplot([A(1) AB(1)], [A(2) AB(2)], "Linewidth", 2)

    polarplot([0 B(1)], [0, B(2)], "Linewidth", 2)

    

    polarplot([0 B(1) + relative_angle], [0, B(2)], "Linewidth", 2)


    legend("A", "A+B", "B", "B", "B+\phi")
    lgd = legend('boxoff')

